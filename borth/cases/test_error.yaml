- name: "underflow 1"
  code: |
    +
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 2"
  code: |
    1 +
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 3"
  code: |
    -
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 4"
  code: |
    1 -
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 5"
  code: |
    *
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 6"
  code: |
    1 *
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 7"
  code: |
    /
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 8"
  code: |
    1 /
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 9"
  code: |
    dup
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 10"
  code: |
    drop
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 11"
  code: |
    swap
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 12"
  code: |
    1 swap
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 13"
  code: |
    over
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "underflow 14"
  code: |
    1 over
  expected_output: "stack-underflow\n"
  expected_stack: []

- name: "division by zero"
  code: |
    4 0 /
  expected_output: "division-by-zero\n"
  expected_stack: []

- name: "invalid word 1"
  code: |
    : 1 2 ;
  expected_output: "invalid-word\n"
  expected_stack: []

- name: "invalid word 2"
  code: |
    : -1 2 ;
  expected_output: "invalid-word\n"
  expected_stack: []

- name: "unknown word"
  code: |
    foo
  expected_output: "?\n"
  expected_stack: []

- name: "limited stack"
  stack_size: 10
  code: |
    1 2 3 4 5
    . cr 5 6
  expected_output: "5\nstack-overflow\n"
  expected_stack: [1, 2, 3, 4, 5]
